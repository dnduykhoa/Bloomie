@model Bloomie.Models.Entities.Batch

@{
    ViewData["Title"] = "Chi tiết lô hàng";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid mt-2 p-0">
    <div class="card shadow-sm border-0">
        <div class="card-body">
            <!-- Header -->
            <h2 class="mb-4 fw-bold">
                <i class="fas fa-box me-2"></i> Chi tiết lô hàng
            </h2>

            <!-- Success/Error Messages -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">@TempData["SuccessMessage"]</div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
            }

            <!-- Batch Information -->
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    Thông tin lô hàng
                </div>
                <div class="card-body">
                    <p class="mb-2"><strong>Nhà cung cấp:</strong> @Model.Supplier.Name</p>
                    <p class="mb-2"><strong>Ngày nhập:</strong> @Model.ImportDate.ToString("dd/MM/yyyy")</p>
                    <p class="mb-2"><strong>Ngày hết hạn:</strong> @Model.ExpiryDate.ToString("dd/MM/yyyy")</p>
                    <p class="mb-2"><strong>Đơn giá:</strong> <span class="price-cell" data-price="@Model.UnitPrice">@Model.UnitPrice.ToString("N0") VNĐ</span></p>
                </div>
            </div>

            <!-- Flower Types in Batch -->
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    Danh sách loại hoa trong lô
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover table-bordered mb-0">
                            <thead class="bg-primary text-white">
                                <tr>
                                    <th class="col-flower-name">Tên loại hoa</th>
                                    <th class="col-quantity">Số lượng</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.BatchFlowerTypes.Any(bft => bft.FlowerType.IsActive))
                                {
                                    @foreach (var bft in Model.BatchFlowerTypes.Where(bft => bft.FlowerType.IsActive))
                                    {
                                        <tr>
                                            <td class="flower-name-cell">@bft.FlowerType.Name</td>
                                            <td>@bft.CurrentQuantity</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="2" class="text-center text-muted py-4">Không có loại hoa nào.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Back Button -->
            <div class="mt-4">
                <a asp-action="Index" class="btn btn-outline-secondary">Quay lại</a>
            </div>
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #2563eb;
        --secondary-color: #60a5fa;
        --text-dark: #1e293b;
        --text-light: #ffffff;
        --background-light: #f8fafc;
        --text-muted: #6b7280;
    }

    h2 {
        font-family: 'Inter', sans-serif;
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--text-dark);
    }

    .container-fluid {
        padding-left: 0 !important;
        padding-right: 0 !important;
        margin: 0 !important;
        width: 100% !important;
    }

    .card {
        width: 100% !important;
        max-width: none !important;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        background-color: #ffffff;
    }

    .card-header {
        font-weight: 500;
        text-transform: uppercase;
        font-size: 0.85rem;
    }

    .card-body {
        padding: 20px;
    }

        .card-body p {
            font-size: 0.9rem;
            color: var(--text-dark);
        }

    .table {
        background-color: #ffffff;
        border-radius: 8px;
        table-layout: fixed;
        width: 100%;
        font-size: 0.9rem;
    }

        .table th, .table td {
            border-color: #e5e7eb;
            text-align: center;
            vertical-align: middle;
            padding: 10px;
        }

        .table th {
            background-color: var(--primary-color);
            color: var(--text-light);
            font-weight: 500;
            text-transform: uppercase;
            font-size: 0.85rem;
        }

    .table-hover tbody tr:hover {
        background-color: #f1f5f9;
    }

    .table-bordered td.flower-name-cell {
        text-align: left !important;
    }

    .col-flower-name {
        width: 70%;
        min-width: 250px;
    }

    .col-quantity {
        width: 30%;
        min-width: 150px;
    }

    .flower-name-cell {
        white-space: normal;
        overflow-wrap: break-word;
        max-width: 100%;
        line-height: 1.4;
    }

    .btn-outline-secondary {
        border-color: #6b7280;
        color: #6b7280;
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-outline-secondary:hover {
            background-color: #4b5563;
            border-color: #4b5563;
            color: #ffffff;
            transform: translateY(-1px);
        }
</style>

<script>
    function formatNumber(number) {
        return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }

    document.addEventListener('DOMContentLoaded', function () {
        const priceCells = document.querySelectorAll('.price-cell');
        priceCells.forEach(cell => {
            let value = parseFloat(cell.getAttribute('data-price'));
            if (!isNaN(value)) {
                cell.textContent = formatNumber(value) + ' VNĐ';
            }
        });
    });
</script>