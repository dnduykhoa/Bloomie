@using System;
@model IEnumerable<dynamic>

@{
    ViewData["Title"] = "Quản lý kho";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    var statusFilter = ViewData["StatusFilter"] as string ?? "";
    int currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
    int pageSize = ViewData["PageSize"] != null ? (int)ViewData["PageSize"] : 10; // Giả định PageSize mặc định là 10
}

<div class="container-fluid mt-2 p-0">
    <div class="card shadow-sm border-0">
        <div class="card-body">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="fw-bold text-dark">
                    <i class="fas fa-warehouse text-primary me-2"></i> Quản lý kho
                </h2>
                <div>
                    <a asp-action="FlowerTypes" class="btn btn-primary me-2">
                        <i class="fas fa-flower me-2"></i> Quản lý loại hoa
                    </a>
                    <a asp-action="LowStock" class="btn btn-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i> Hoa tươi tồn kho thấp
                    </a>
                </div>
            </div>

            <!-- Success/Error Messages -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">@TempData["SuccessMessage"]</div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
            }

            <!-- Search Bar -->
            <div class="mb-4">
                <form asp-action="Index" method="get" class="d-flex align-items-center flex-wrap gap-2">
                    <div class="input-group" style="max-width: 300px;">
                        <input type="text" name="supplierName" class="form-control" placeholder="Tìm theo nhà cung cấp" value="@ViewData["SupplierName"]" />
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    <div class="input-group" style="max-width: 300px;">
                        <input type="text" name="flowerTypeName" class="form-control" placeholder="Tìm theo loại hoa" value="@ViewData["FlowerTypeName"]" />
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    <div class="input-group" style="max-width: 200px;">
                        <input type="date" name="importDate" class="form-control" value="@ViewData["ImportDate"]" />
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    <div class="input-group" style="max-width: 200px;">
                        <select name="statusFilter" class="form-control">
                            @if (string.IsNullOrEmpty(statusFilter))
                            {
                                <option value="" selected>Tất cả</option>
                            }
                            else
                            {
                                <option value="">Tất cả</option>
                            }
                            @if (statusFilter == "valid")
                            {
                                <option value="valid" selected>Còn hạn</option>
                            }
                            else
                            {
                                <option value="valid">Còn hạn</option>
                            }
                            @if (statusFilter == "expired")
                            {
                                <option value="expired" selected>Hết hạn</option>
                            }
                            else
                            {
                                <option value="expired">Hết hạn</option>
                            }
                        </select>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-times"></i> Xóa bộ lọc
                    </a>
                </form>
            </div>

            <!-- Flower Type Summaries -->
            @if (ViewData["FlowerTypeSummaries"] != null)
            {
                var summaries = ViewData["FlowerTypeSummaries"] as IEnumerable<dynamic>;
                if (summaries != null)
                {
                    <div class="card mb-4">
                        <div class="card-header bg-primary text-white">Tổng quan số lượng tồn kho</div>
                        <div class="card-body">
                            <ul class="list-unstyled">
                                @foreach (var summary in summaries)
                                {
                                    <li>@summary.FlowerTypeName: @summary.TotalQuantity</li>
                                }
                            </ul>
                        </div>
                    </div>
                }
            }

            <!-- Inventory Table -->
            <div class="table-responsive">
                <table class="table table-hover table-bordered mb-0">
                    <thead class="bg-primary text-white">
                        <tr>
                            <th class="col-stt">STT</th>
                            <th class="col-supplier">Nhà cung cấp</th>
                            <th class="col-flower-type">Loại hoa</th>
                            <th class="col-quantity">Số lượng</th>
                            <th class="col-unit-price">Đơn giá</th>
                            <th class="col-import-date">Ngày nhập</th>
                            <th class="col-expiry-date">Ngày hết hạn</th>
                            <th class="col-created-by">Người nhập</th>
                            <th class="col-actions">Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            int index = (currentPage - 1) * pageSize + 1;
                            foreach (var item in Model)
                            {
                                var batch = item.Batch as Bloomie.Models.Entities.Batch;
                                var createdBy = item.CreatedBy as string;
                                var remainingDays = (int)(batch.ExpiryDate - DateTime.Now).TotalDays;
                                var statusClass = remainingDays <= 3 ? "table-warning" : (remainingDays < 0 ? "table-danger" : "");

                                <tr class="@statusClass">
                                    <td>@index</td>
                                    <td class="supplier-cell">@batch.Supplier.Name</td>
                                    <td class="flower-type-cell">
                                        @foreach (var bft in batch.BatchFlowerTypes.Where(bft => bft.FlowerType.IsActive))
                                        {
                                            <div>@bft.FlowerType.Name</div>
                                        }
                                    </td>
                                    <td>@batch.BatchFlowerTypes.Sum(bft => bft.CurrentQuantity)</td>
                                    <td class="price-cell" data-price="@batch.UnitPrice">@batch.UnitPrice.ToString("N0") VNĐ</td>
                                    <td>@batch.ImportDate.ToString("dd/MM/yyyy")</td>
                                    <td>
                                        @batch.ExpiryDate.ToString("dd/MM/yyyy")
                                        @if (remainingDays < 0)
                                        {
                                            <span class="text-danger">(Hết hạn)</span>
                                        }
                                        else if (remainingDays <= 3)
                                        {
                                            <span class="text-warning">(Sắp hết hạn: @remainingDays ngày)</span>
                                        }
                                    </td>
                                    <td>@createdBy</td>
                                    <td class="actions-cell">
                                        <a asp-action="Details" asp-route-batchId="@batch.Id" asp-route-pageNumber="@ViewData["CurrentPage"]" class="btn btn-info btn-sm" data-bs-toggle="tooltip" data-bs-title="Chi tiết">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Update" asp-route-batchId="@batch.Id" asp-route-pageNumber="@ViewData["CurrentPage"]" class="btn btn-warning btn-sm" data-bs-toggle="tooltip" data-bs-title="Cập nhật">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="History" asp-route-flowerTypeId="@batch.Id" asp-route-currentPage="@ViewData["CurrentPage"]" class="btn btn-info btn-sm" data-bs-toggle="tooltip" data-bs-title="Lịch sử">
                                            <i class="fas fa-history"></i>
                                        </a>
                                        <form asp-action="Delete" asp-route-batchId="@batch.Id" asp-route-pageNumber="@ViewData["CurrentPage"]" method="post" style="display:inline;" onsubmit="return confirm('Bạn có chắc chắn muốn xóa lô hàng này?');">
                                            <button type="submit" class="btn btn-danger btn-sm" data-bs-toggle="tooltip" data-bs-title="Xóa">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                                index++;
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="9" class="text-center text-muted py-4">Không có dữ liệu lô hàng nào.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination Controls -->
            @if ((int)ViewData["TotalPages"] > 1)
            {
                <div class="pagination-section mt-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="pagination-info">
                            Hiển thị @Model.Count() trong tổng số @(ViewData["TotalItems"] != null ? (int)ViewData["TotalItems"] : 0) lô hàng
                        </div>
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-end mb-0">
                                <li class="page-item @((int)ViewData["CurrentPage"] <= 1 ? "disabled" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@((int)ViewData["CurrentPage"] - 1)" asp-route-pageSize="@ViewData["PageSize"]" asp-route-supplierName="@ViewData["SupplierName"]" asp-route-flowerTypeName="@ViewData["FlowerTypeName"]" asp-route-importDate="@ViewData["ImportDate"]" asp-route-statusFilter="@ViewData["StatusFilter"]" aria-label="Previous">
                                        <span aria-hidden="true">«</span>
                                    </a>
                                </li>
                                @for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
                                {
                                    <li class="page-item @(i == (int)ViewData["CurrentPage"] ? "active" : "")">
                                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@ViewData["PageSize"]" asp-route-supplierName="@ViewData["SupplierName"]" asp-route-flowerTypeName="@ViewData["FlowerTypeName"]" asp-route-importDate="@ViewData["ImportDate"]" asp-route-statusFilter="@ViewData["StatusFilter"]">@i</a>
                                    </li>
                                }
                                <li class="page-item @((int)ViewData["CurrentPage"] >= (int)ViewData["TotalPages"] ? "disabled" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@((int)ViewData["CurrentPage"] + 1)" asp-route-pageSize="@ViewData["PageSize"]" asp-route-supplierName="@ViewData["SupplierName"]" asp-route-flowerTypeName="@ViewData["FlowerTypeName"]" asp-route-importDate="@ViewData["ImportDate"]" asp-route-statusFilter="@ViewData["StatusFilter"]" aria-label="Next">
                                        <span aria-hidden="true">»</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #2563eb;
        --secondary-color: #60a5fa;
        --text-dark: #1e293b;
        --text-light: #ffffff;
        --background-light: #f8fafc;
    }

    h2 {
        font-family: 'Inter', sans-serif;
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--text-dark);
    }

    .container-fluid {
        padding-left: 0 !important;
        padding-right: 0 !important;
        margin: 0 !important;
        width: 100% !important;
    }

    .card {
        width: 100% !important;
        max-width: none !important;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        background-color: #ffffff;
    }

    .card-header {
        font-weight: 500;
        text-transform: uppercase;
        font-size: 0.9rem;
    }

    .card-body {
        padding: 20px;
    }

    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-primary:hover {
            background-color: #1d4ed8;
            border-color: #1d4ed8;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

    .btn-secondary {
        background-color: #6b7280;
        border-color: #6b7280;
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-secondary:hover {
            background-color: #4b5563;
            border-color: #4b5563;
            transform: translateY(-1px);
        }

    .btn-warning {
        background-color: #f59e0b;
        border-color: #f59e0b;
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-warning:hover {
            background-color: #d97706;
            border-color: #d97706;
            transform: translateY(-1px);
        }

    .form-control {
        border-radius: 6px;
        border: 1px solid #d1d5db;
        padding: 8px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
            outline: none;
        }

    select.form-control {
        appearance: none;
        background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24"><path fill="%231e293b" d="M7 10l5 5 5-5z"/></svg>') no-repeat right 15px center;
        background-size: 12px;
        padding-right: 35px;
    }

    .input-group {
        border-radius: 6px;
    }

    .gap-2 {
        gap: 10px;
    }

    .table {
        background-color: #ffffff;
        border-radius: 8px;
        table-layout: fixed;
        width: 100%;
        font-size: 0.9rem;
    }

        .table th, .table td {
            border-color: #e5e7eb;
            text-align: center;
            vertical-align: middle;
            padding: 10px;
        }

        .table th {
            background-color: var(--primary-color);
            color: var(--text-light);
            font-weight: 500;
            text-transform: uppercase;
            font-size: 0.85rem;
        }

    .table-hover tbody tr:hover {
        background-color: #f1f5f9;
    }

    .table-bordered td.flower-type-cell {
        text-align: left !important;
    }

    .col-stt {
        width: 5%;
        min-width: 50px;
    }

    .col-supplier {
        width: 15%;
        min-width: 150px;
    }

    .col-flower-type {
        width: 15%;
        min-width: 150px;
    }

    .col-quantity {
        width: 10%;
        min-width: 100px;
    }

    .col-unit-price {
        width: 12%;
        min-width: 120px;
    }

    .col-import-date {
        width: 12%;
        min-width: 120px;
    }

    .col-expiry-date {
        width: 15%;
        min-width: 150px;
    }

    .col-created-by {
        width: 12%;
        min-width: 120px;
    }

    .col-actions {
        width: 20%;
        min-width: 200px;
    }

    .supplier-cell, .flower-type-cell {
        white-space: normal;
        overflow-wrap: break-word;
        max-width: 100%;
        line-height: 1.4;
    }

    .price-cell {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 100%;
    }

    .actions-cell {
        white-space: nowrap;
    }

    .btn-info, .btn-warning, .btn-danger {
        border-radius: 6px;
        padding: 4px 8px;
        font-size: 0.8rem;
        min-width: 32px;
        transition: all 0.2s ease;
        margin-right: 4px;
    }

    .btn-info {
        background-color: #06b6d4;
        border-color: #06b6d4;
    }

        .btn-info:hover {
            background-color: #0891b2;
            transform: translateY(-1px);
        }

    .btn-warning {
        background-color: #f59e0b;
        border-color: #f59e0b;
    }

        .btn-warning:hover {
            background-color: #d97706;
            transform: translateY(-1px);
        }

    .btn-danger {
        background-color: #ef4444;
        border-color: #ef4444;
        margin-right: 0;
    }

        .btn-danger:hover {
            background-color: #dc2626;
            transform: translateY(-1px);
        }

    .pagination-section {
        padding: 12px 0;
        background-color: #f8fafc;
        border-top: 1px solid #e5e7eb;
    }

    .pagination-info {
        font-size: 0.85rem;
        color: #6b7280;
    }

    .pagination .page-link {
        border-radius: 6px;
        margin: 0 4px;
        color: var(--primary-color);
        border: 1px solid #d1d5db;
        font-size: 0.85rem;
        padding: 6px 12px;
        transition: all 0.2s ease;
    }

    .pagination .page-item.active .page-link {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        color: var(--text-light);
    }

    .pagination .page-item.disabled .page-link {
        color: #d1d5db;
        background-color: #f8fafc;
        border-color: #d1d5db;
    }

    .pagination .page-link:hover {
        background-color: #e5e7eb;
        border-color: #d1d5db;
    }
</style>

<script>
    function formatNumber(number) {
        return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }

    document.addEventListener('DOMContentLoaded', function () {
        const priceCells = document.querySelectorAll('.price-cell');
        priceCells.forEach(cell => {
            let value = parseFloat(cell.getAttribute('data-price'));
            if (!isNaN(value)) {
                cell.textContent = formatNumber(value) + ' VNĐ';
            }
        });

        // Initialize Bootstrap tooltips
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
    });
</script>