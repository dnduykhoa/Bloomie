@model IEnumerable<Bloomie.Models.Entities.FlowerType>

@{
    ViewData["Title"] = "Quản lý loại hoa";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    var sortOrder = ViewData["SortOrder"] as string ?? "";
}

<div class="container-fluid mt-2 p-0">
    <div class="card shadow-sm border-0">
        <div class="card-body">
            <!-- Header and Action Buttons -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="fw-bold text-dark">
                    <i class="fas fa-leaf text-primary me-2"></i> Quản lý loại hoa
                </h2>
                <div>
                    <a asp-action="CreateFlowerType" class="btn btn-primary me-2">
                        <i class="fas fa-plus me-2"></i> Thêm loại hoa
                    </a>
                    <a asp-action="Index" class="btn btn-secondary me-2">
                        <i class="fas fa-warehouse me-2"></i> Quản lý kho
                    </a>
                    <a asp-action="LowStock" class="btn btn-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i> Hoa tươi tồn kho thấp
                    </a>
                </div>
            </div>

            <!-- Success/Error Messages -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">@TempData["SuccessMessage"]</div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
            }

            <!-- Search Bar -->
            <div class="mb-4">
                <form asp-action="FlowerTypes" method="get" class="d-flex align-items-center flex-wrap gap-2">
                    <div class="input-group" style="max-width: 300px;">
                        <input type="text" name="searchName" class="form-control" placeholder="Tìm theo tên loại hoa" value="@ViewData["SearchName"]" />
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    <div class="input-group" style="max-width: 300px;">
                        <input type="text" name="searchSupplier" class="form-control" placeholder="Tìm theo nhà cung cấp" value="@ViewData["SearchSupplier"]" />
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    <div class="input-group" style="max-width: 200px;">
                        <select name="sortOrder" class="form-control">
                            @if (sortOrder == "quantity_asc")
                            {
                                <option value="quantity_asc" selected>Số lượng tăng dần</option>
                            }
                            else
                            {
                                <option value="quantity_asc">Số lượng tăng dần</option>
                            }
                            @if (sortOrder == "quantity_desc")
                            {
                                <option value="quantity_desc" selected>Số lượng giảm dần</option>
                            }
                            else
                            {
                                <option value="quantity_desc">Số lượng giảm dần</option>
                            }
                        </select>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    <a asp-action="FlowerTypes" class="btn btn-secondary">
                        <i class="fas fa-times"></i> Xóa bộ lọc
                    </a>
                </form>
            </div>

            <!-- Flower Types Table -->
            <div class="table-responsive">
                <table class="table table-hover table-bordered mb-0">
                    <thead class="bg-primary text-white">
                        <tr>
                            <th class="col-name">Tên loại hoa</th>
                            <th class="col-quantity">Số lượng tồn kho</th>
                            <th class="col-status">Trạng thái tồn kho</th>
                            <th class="col-suppliers">Nhà cung cấp</th>
                            <th class="col-actions">Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var flowerType in Model)
                            {
                                var totalCurrentQuantity = flowerType.BatchFlowerTypes?.Sum(bft => bft.CurrentQuantity) ?? 0;
                                var statusClass = totalCurrentQuantity <= 10 ? "table-warning" : (totalCurrentQuantity <= 0 ? "table-danger" : "");
                                var stockStatus = totalCurrentQuantity <= 0 ? "Hết hàng" : (totalCurrentQuantity <= 10 ? "Tồn kho thấp" : "Bình thường");

                                <tr class="@statusClass">
                                    <td class="name-cell">@flowerType.Name</td>
                                    <td>@totalCurrentQuantity</td>
                                    <td>@stockStatus</td>
                                    <td class="suppliers-cell">
                                        @if (flowerType.Suppliers != null && flowerType.Suppliers.Any())
                                        {
                                            <ul class="list-unstyled mb-0">
                                                @foreach (var supplier in flowerType.Suppliers)
                                                {
                                                    <li>@supplier.Name</li>
                                                }
                                            </ul>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Chưa có nhà cung cấp</span>
                                        }
                                    </td>
                                    <td class="actions-cell">
                                        <a asp-action="ImportFlower" asp-route-flowerTypeId="@flowerType.Id" asp-route-currentPage="@ViewData["CurrentPage"]" class="btn btn-primary btn-sm" data-bs-toggle="tooltip" data-bs-title="Nhập kho">
                                            <i class="fas fa-plus"></i>
                                        </a>
                                        <a asp-action="Adjust" asp-route-flowerTypeId="@flowerType.Id" asp-route-currentPage="@ViewData["CurrentPage"]" class="btn btn-warning btn-sm" data-bs-toggle="tooltip" data-bs-title="Điều chỉnh">
                                            <i class="fas fa-adjust"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5" class="text-center text-muted py-4">Không có loại hoa nào.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination Controls -->
            @if ((int)ViewData["TotalPages"] > 1)
            {
                <div class="pagination-section mt-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="pagination-info">
                            Hiển thị @Model.Count() trong tổng số @(ViewData["TotalItems"] != null ? (int)ViewData["TotalItems"] : 0) loại hoa
                        </div>
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-end mb-0">
                                <li class="page-item @((int)ViewData["CurrentPage"] <= 1 ? "disabled" : "")">
                                    <a class="page-link" asp-action="FlowerTypes" asp-route-pageNumber="@((int)ViewData["CurrentPage"] - 1)" asp-route-pageSize="@ViewData["PageSize"]" asp-route-searchName="@ViewData["SearchName"]" asp-route-searchSupplier="@ViewData["SearchSupplier"]" asp-route-sortOrder="@ViewData["SortOrder"]" aria-label="Previous">
                                        <span aria-hidden="true">«</span>
                                    </a>
                                </li>
                                @for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
                                {
                                    <li class="page-item @(i == (int)ViewData["CurrentPage"] ? "active" : "")">
                                        <a class="page-link" asp-action="FlowerTypes" asp-route-pageNumber="@i" asp-route-pageSize="@ViewData["PageSize"]" asp-route-searchName="@ViewData["SearchName"]" asp-route-searchSupplier="@ViewData["SearchSupplier"]" asp-route-sortOrder="@ViewData["SortOrder"]">@i</a>
                                    </li>
                                }
                                <li class="page-item @((int)ViewData["CurrentPage"] >= (int)ViewData["TotalPages"] ? "disabled" : "")">
                                    <a class="page-link" asp-action="FlowerTypes" asp-route-pageNumber="@((int)ViewData["CurrentPage"] + 1)" asp-route-pageSize="@ViewData["PageSize"]" asp-route-searchName="@ViewData["SearchName"]" asp-route-searchSupplier="@ViewData["SearchSupplier"]" asp-route-sortOrder="@ViewData["SortOrder"]" aria-label="Next">
                                        <span aria-hidden="true">»</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #2563eb;
        --secondary-color: #60a5fa;
        --text-dark: #1e293b;
        --text-light: #ffffff;
        --background-light: #f8fafc;
    }

    h2 {
        font-family: 'Inter', sans-serif;
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--text-dark);
    }

    .container-fluid {
        padding-left: 0 !important;
        padding-right: 0 !important;
        margin: 0 !important;
        width: 100% !important;
    }

    .card {
        width: 100% !important;
        max-width: none !important;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        background-color: #ffffff;
    }

    .card-body {
        padding: 20px;
    }

    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-primary:hover {
            background-color: #1d4ed8;
            border-color: #1d4ed8;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

    .btn-secondary {
        background-color: #6b7280;
        border-color: #6b7280;
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-secondary:hover {
            background-color: #4b5563;
            border-color: #4b5563;
            transform: translateY(-1px);
        }

    .btn-warning {
        background-color: #f59e0b;
        border-color: #f59e0b;
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-warning:hover {
            background-color: #d97706;
            border-color: #d97706;
            transform: translateY(-1px);
        }

    .form-control {
        border-radius: 6px;
        border: 1px solid #d1d5db;
        padding: 8px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
            outline: none;
        }

    select.form-control {
        appearance: none;
        background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24"><path fill="%231e293b" d="M7 10l5 5 5-5z"/></svg>') no-repeat right 15px center;
        background-size: 12px;
        padding-right: 35px;
    }

    .input-group {
        border-radius: 6px;
    }

    .gap-2 {
        gap: 10px;
    }

    .table {
        background-color: #ffffff;
        border-radius: 8px;
        table-layout: fixed;
        width: 100%;
        font-size: 0.9rem;
    }

        .table th, .table td {
            border-color: #e5e7eb;
            text-align: center;
            vertical-align: middle;
            padding: 10px;
        }

        .table th {
            background-color: var(--primary-color);
            color: var(--text-light);
            font-weight: 500;
            text-transform: uppercase;
            font-size: 0.85rem;
        }

    .table-hover tbody tr:hover {
        background-color: #f1f5f9;
    }

    .table-bordered td.name-cell,
    .table-bordered td.suppliers-cell {
        text-align: left !important;
    }

    .col-name {
        width: 25%;
        min-width: 200px;
    }

    .col-quantity {
        width: 15%;
        min-width: 150px;
    }

    .col-status {
        width: 15%;
        min-width: 150px;
    }

    .col-suppliers {
        width: 25%;
        min-width: 200px;
    }

    .col-actions {
        width: 20%;
        min-width: 180px;
    }

    .name-cell, .suppliers-cell {
        white-space: normal;
        overflow-wrap: break-word;
        max-width: 100%;
        line-height: 1.4;
    }

    .actions-cell {
        white-space: nowrap;
    }

    .btn-primary, .btn-warning {
        border-radius: 6px;
        padding: 4px 8px;
        font-size: 0.8rem;
        min-width: 32px;
        transition: all 0.2s ease;
        margin-right: 4px;
    }

        .btn-primary:hover {
            background-color: #1d4ed8;
            transform: translateY(-1px);
        }

    .btn-warning {
        background-color: #f59e0b;
        border-color: #f59e0b;
    }

        .btn-warning:hover {
            background-color: #d97706;
            transform: translateY(-1px);
        }

    .pagination-section {
        padding: 12px 0;
        background-color: #f8fafc;
        border-top: 1px solid #e5e7eb;
    }

    .pagination-info {
        font-size: 0.85rem;
        color: #6b7280;
    }

    .pagination .page-link {
        border-radius: 6px;
        margin: 0 4px;
        color: var(--primary-color);
        border: 1px solid #d1d5db;
        font-size: 0.85rem;
        padding: 6px 12px;
        transition: all 0.2s ease;
    }

    .pagination .page-item.active .page-link {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        color: var(--text-light);
    }

    .pagination .page-item.disabled .page-link {
        color: #d1d5db;
        background-color: #f8fafc;
        border-color: #d1d5db;
    }

    .pagination .page-link:hover {
        background-color: #e5e7eb;
        border-color: #d1d5db;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize Bootstrap tooltips
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
    });
</script>