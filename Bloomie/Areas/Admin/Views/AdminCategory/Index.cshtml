@model IEnumerable<Bloomie.Models.Entities.Category>
@{
    ViewData["Title"] = "Quản lý danh mục";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid mt-2 p-0">
    <div class="card shadow-sm border-0">
        <div class="card-body">
            <!-- Header and Add Category Button -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="fw-bold text-dark">
                    <i class="fas fa-list text-primary me-2"></i> Danh sách danh mục
                </h2>
                <div>
                    <a asp-action="Add" class="btn btn-primary shadow-sm me-2">
                        <i class="fas fa-plus me-2"></i> Thêm danh mục mới
                    </a>
                    <a asp-action="AssignSubCategories" class="btn btn-info shadow-sm">
                        <i class="fas fa-link me-2"></i> Gán danh mục con
                    </a>
                </div>
            </div>

            <!-- Alerts for Success/Error Messages -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <!-- Search Bar -->
            <div class="mb-4">
                <div class="input-group" style="max-width: 400px;">
                    <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm danh mục..." onkeyup="searchCategories()">
                    <span class="input-group-text">
                        <i class="fas fa-search"></i>
                    </span>
                </div>
            </div>

            <!-- Category List -->
            <div class="table-responsive">
                <table class="table table-hover table-bordered mb-0">
                    <thead class="bg-primary text-white">
                        <tr>
                            <th class="col-name">Danh mục</th>
                            <th class="col-actions">Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="categoryList">
                        @foreach (var category in Model.Where(c => c.ParentCategoryId == null))
                        {
                            <tr class="category-item">
                                <td class="text-left category-name">@category.Name</td>
                                <td class="actions-cell">
                                    <a asp-action="Display" asp-route-id="@category.Id" class="btn btn-info btn-sm" data-bs-toggle="tooltip" data-bs-title="Xem">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a asp-action="Update" asp-route-id="@category.Id" class="btn btn-warning btn-sm" data-bs-toggle="tooltip" data-bs-title="Sửa">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@category.Id" class="btn btn-danger btn-sm" data-bs-toggle="tooltip" data-bs-title="Xóa">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                            @if (category.SubCategories != null && category.SubCategories.Any())
                            {
                                foreach (var subCategory in category.SubCategories)
                                {
                                    <tr class="subcategory-item">
                                        <td class="text-left subcategory-name ps-4">↳ @subCategory.Name</td>
                                        <td class="actions-cell">
                                            <a asp-action="Display" asp-route-id="@subCategory.Id" class="btn btn-info btn-sm" data-bs-toggle="tooltip" data-bs-title="Xem">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Update" asp-route-id="@subCategory.Id" class="btn btn-warning btn-sm" data-bs-toggle="tooltip" data-bs-title="Sửa">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@subCategory.Id" class="btn btn-danger btn-sm" data-bs-toggle="tooltip" data-bs-title="Xóa">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>

            <!-- Empty State -->
            @if (!Model.Any(c => c.ParentCategoryId == null))
            {
                <div class="text-center text-muted py-4">
                    Không có danh mục nào.
                </div>
            }
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #2563eb;
        --secondary-color: #60a5fa;
        --text-dark: #1e293b;
        --text-light: #ffffff;
        --background-light: #f8fafc;
    }

    h2 {
        font-family: 'Inter', sans-serif;
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--text-dark);
    }

    .container-fluid {
        padding-left: 0 !important;
        padding-right: 0 !important;
        margin: 0 !important;
        width: 100% !important;
    }

    .card {
        width: 100% !important;
        max-width: none !important;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        background-color: #ffffff;
    }

    .card-body {
        padding: 20px;
    }

    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-primary:hover {
            background-color: #1d4ed8;
            border-color: #1d4ed8;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

    .btn-info {
        background-color: #06b6d4;
        border-color: #06b6d4;
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-info:hover {
            background-color: #0891b2;
            border-color: #0891b2;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

    .btn-warning {
        background-color: #f59e0b;
        border-color: #f59e0b;
        border-radius: 6px;
        padding: 4px 8px;
        font-size: 0.8rem;
        transition: all 0.2s ease;
    }

        .btn-warning:hover {
            background-color: #d97706;
            transform: translateY(-1px);
        }

    .btn-danger {
        background-color: #ef4444;
        border-color: #ef4444;
        border-radius: 6px;
        padding: 4px 8px;
        font-size: 0.8rem;
        transition: all 0.2s ease;
        margin-right: 0;
    }

        .btn-danger:hover {
            background-color: #dc2626;
            transform: translateY(-1px);
        }

    .form-control {
        border-radius: 6px;
        border: 1px solid #d1d5db;
        padding: 8px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
            outline: none;
        }

    .input-group {
        border-radius: 6px;
    }

    .input-group-text {
        background-color: var(--primary-color);
        color: var(--text-light);
        border: 1px solid var(--primary-color);
        border-radius: 0 6px 6px 0;
    }

    .table {
        background-color: #ffffff;
        border-radius: 8px;
        table-layout: fixed;
        width: 100%;
        font-size: 0.9rem;
    }

        .table th, .table td {
            border-color: #e5e7eb;
            text-align: center;
            vertical-align: middle;
            padding: 10px;
        }

        .table th {
            background-color: var(--primary-color);
            color: var(--text-light);
            font-weight: 500;
            text-transform: uppercase;
            font-size: 0.85rem;
        }

    .table-hover tbody tr:hover {
        background-color: #f1f5f9;
    }

    .table-bordered td.text-left {
        text-align: left !important;
    }

    .col-name {
        width: 70%;
        min-width: 250px;
    }

    .col-actions {
        width: 30%;
        min-width: 160px;
    }

    .category-name, .subcategory-name {
        white-space: normal;
        overflow-wrap: break-word;
        max-width: 100%;
        line-height: 1.4;
    }

    .actions-cell {
        white-space: nowrap;
    }

    .btn-info, .btn-warning, .btn-danger {
        border-radius: 6px;
        padding: 4px 8px;
        font-size: 0.8rem;
        min-width: 32px;
        transition: all 0.2s ease;
        margin-right: 4px;
    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function searchCategories() {
            let input = document.getElementById("searchInput").value.toLowerCase();
            let categoryItems = document.querySelectorAll("#categoryList .category-item");

            categoryItems.forEach(categoryItem => {
                let categoryName = categoryItem.querySelector(".category-name").textContent.toLowerCase();
                let subCategoryItems = categoryItem.querySelectorAll(".subcategory-item");
                let hasVisibleSubCategory = false;

                subCategoryItems.forEach(subCategoryItem => {
                    let subCategoryName = subCategoryItem.querySelector(".subcategory-name").textContent.toLowerCase();
                    if (subCategoryName.includes(input)) {
                        subCategoryItem.style.display = "";
                        hasVisibleSubCategory = true;
                    } else {
                        subCategoryItem.style.display = "none";
                    }
                });

                if (categoryName.includes(input) || hasVisibleSubCategory) {
                    categoryItem.style.display = "";
                } else {
                    categoryItem.style.display = "none";
                }
            });

            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
            const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
        }
    </script>
}