@model Bloomie.Models.Entities.Product

@{
    ViewData["Title"] = "Delete Product";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    int currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
}

<div class="container-fluid mt-2 p-0">
    <!-- Card chứa thông tin sản phẩm -->
    <div class="card shadow-sm border-0 delete-container">
        <div class="card-body">
            <h2 class="fw-bold text-dark mb-4">
                <i class="fas fa-trash text-primary me-2"></i> Xóa sản phẩm
            </h2>
            <div class="row align-items-stretch">
                <!-- Cột hiển thị ảnh (bên trái) -->
                <div class="col-md-6 product-image">
                    <div id="productCarousel" class="carousel slide carousel-fade" data-bs-ride="carousel" data-bs-interval="false">
                        <div class="carousel-inner">
                            <!-- Hiển thị ảnh chính -->
                            @if (!string.IsNullOrEmpty(Model.ImageUrl))
                            {
                                <div class="carousel-item active">
                                    <div class="image-container">
                                        <img src="@Model.ImageUrl" class="carousel-img img-thumbnail" alt="Main Image">
                                    </div>
                                </div>
                            }

                            <!-- Hiển thị ảnh bổ sung -->
                            @if (Model.Images != null && Model.Images.Any())
                            {
                                var isFirst = string.IsNullOrEmpty(Model.ImageUrl); // Nếu không có ảnh chính, ảnh bổ sung đầu tiên sẽ là active
                                @foreach (var image in Model.Images)
                                {
                                    <div class="carousel-item @(isFirst ? "active" : "")">
                                        <div class="image-container">
                                            <img src="@image.Url" class="carousel-img img-thumbnail" alt="Additional Image">
                                        </div>
                                    </div>
                                    isFirst = false;
                                }
                            }
                        </div>

                        <!-- Điều hướng Carousel -->
                        @if ((Model.ImageUrl != null && Model.ImageUrl.Any()) || (Model.Images != null && Model.Images.Count > 1))
                        {
                            <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        }
                    </div>
                </div>

                <!-- Cột thông tin sản phẩm (bên phải) -->
                <div class="col-md-6 product-info">
                    <div class="info-card">
                        <h3 class="fw-bold text-dark mb-3">Thông tin sản phẩm</h3>
                        <div class="info-item mb-3">
                            <strong>Mã sản phẩm:</strong> @Model.Id
                        </div>
                        <div class="info-item mb-3">
                            <strong>Tên sản phẩm:</strong> @Model.Name
                        </div>
                        <div class="info-item mb-3">
                            <strong>Giá:</strong> <span class="price-cell" data-price="@Model.Price">@Model.Price đ</span>
                        </div>
                        <div class="info-item mb-3">
                            <strong>Mô tả:</strong>
                            <div class="description-content">
                                @{
                                    var descriptionLines = Model.Description?.Split(new[] { ". ", "." }, StringSplitOptions.RemoveEmptyEntries);
                                    if (descriptionLines != null && descriptionLines.Any())
                                    {
                                        foreach (var line in descriptionLines)
                                        {
                                            var formattedLine = line.Trim();
                                            if (!string.IsNullOrEmpty(formattedLine))
                                            {
                                                if (!formattedLine.EndsWith("."))
                                                {
                                                    formattedLine += ".";
                                                }
                                                <p class="mb-1">@formattedLine</p>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <p class="mb-1 text-muted">Không có mô tả có sẵn.</p>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <form asp-action="DeleteConfirmed" method="post" id="deleteForm">
                <input type="hidden" asp-for="Id" />
                <input type="hidden" name="currentPage" value="@currentPage" />
                <div class="form-group text-center mt-4">
                    <button type="button" class="btn btn-danger btn-sm me-2" onclick="showConfirmDialog()" data-bs-toggle="tooltip" data-bs-title="Xóa">
                        <i class="fas fa-trash me-1"></i> Xóa
                    </button>
                    <a asp-action="Index" asp-route-pageNumber="@currentPage" class="btn btn-secondary btn-sm" data-bs-toggle="tooltip" data-bs-title="Hủy">
                        <i class="fas fa-times me-1"></i> Hủy
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Custom Confirmation Dialog -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa sản phẩm "@Model.Name"?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i> Hủy
                </button>
                <button type="button" class="btn btn-danger btn-sm" onclick="document.getElementById('deleteForm').submit()">
                    <i class="fas fa-trash me-1"></i> Xóa
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #2563eb;
        --secondary-color: #60a5fa;
        --text-dark: #1e293b;
        --text-light: #ffffff;
        --background-light: #f8fafc;
    }

    h2, h3 {
        font-family: 'Inter', sans-serif;
        font-weight: 600;
        color: var(--text-dark);
    }

    h2 {
        font-size: 1.75rem;
    }

    h3 {
        font-size: 1.25rem;
    }

    .container-fluid {
        padding-left: 0 !important;
        padding-right: 0 !important;
        margin: 0 !important;
        width: 100% !important;
    }

    .delete-container {
        max-width: 1000px;
        margin: 0 auto;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        background-color: #ffffff;
    }

    .card-body {
        padding: 20px;
    }

    .row {
        display: flex;
        align-items: stretch;
    }

    .product-image {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 400px;
        padding: 0;
    }

    .carousel {
        border-radius: 8px;
        overflow: hidden;
        width: 100%;
        height: 100%;
        max-width: 500px;
    }

    .carousel-inner {
        height: 100%;
    }

    .carousel-item {
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .image-container {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
        padding: 10px;
    }

    .carousel-img {
        max-width: 100%;
        max-height: 100%;
        width: auto;
        height: auto;
        object-fit: contain;
        border: 1px solid #e5e7eb;
        border-radius: 6px;
        transition: all 0.2s ease;
    }

        .carousel-img:hover {
            border-color: var(--primary-color);
            box-shadow: 0 0 6px rgba(37, 99, 235, 0.2);
            transform: scale(1.05);
        }

    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        background-color: rgba(0, 0, 0, 0.5);
        border-radius: 50%;
        padding: 20px;
        transition: all 0.2s ease;
    }

    .carousel-control-prev:hover .carousel-control-prev-icon,
    .carousel-control-next:hover .carousel-control-next-icon {
        background-color: var(--primary-color);
        transform: scale(1.1);
    }

    .product-info {
        display: flex;
        align-items: stretch;
        height: 400px;
        padding: 0;
    }

    .info-card {
        background-color: #ffffff;
        border: 1px solid #e5e7eb;
        border-radius: 8px;
        width: 100%;
        height: 100%;
        padding: 15px;
        display: flex;
        flex-direction: column;
        overflow-y: auto;
    }

    .info-item {
        font-family: 'Inter', sans-serif;
        font-size: 0.9rem;
        color: #333;
        display: flex;
        align-items: flex-start;
        margin-bottom: 10px;
    }

        .info-item strong {
            color: var(--text-dark);
            display: inline-block;
            width: 120px;
            flex-shrink: 0;
            font-weight: 500;
        }

    .description-content p {
        margin: 0;
        font-size: 0.9rem;
        color: #555;
        line-height: 1.5;
    }

    .btn-danger {
        background-color: #ef4444;
        border-color: #ef4444;
        border-radius: 6px;
        padding: 4px 8px;
        font-size: 0.8rem;
        transition: all 0.2s ease;
    }

        .btn-danger:hover {
            background-color: #dc2626;
            border-color: #dc2626;
            transform: translateY(-1px);
        }

    .btn-secondary {
        background-color: #6b7280;
        border-color: #6b7280;
        border-radius: 6px;
        padding: 4px 8px;
        font-size: 0.8rem;
        transition: all 0.2s ease;
    }

        .btn-secondary:hover {
            background-color: #4b5563;
            border-color: #4b5563;
            transform: translateY(-1px);
        }

    .modal-content {
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .modal-header {
        background-color: var(--background-light);
        border-bottom: 1px solid #e5e7eb;
    }

    .modal-title {
        font-family: 'Inter', sans-serif;
        font-weight: 500;
        color: var(--text-dark);
        font-size: 1.1rem;
    }

    .modal-body {
        font-family: 'Inter', sans-serif;
        font-size: 0.9rem;
        color: #333;
    }
</style>

@section Scripts {
    <script>
        // Hàm định dạng số với dấu phẩy
        function formatNumber(number) {
            return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }

        // Định dạng giá trị Price
        document.addEventListener('DOMContentLoaded', function () {
            const priceCells = document.querySelectorAll('.price-cell');
            priceCells.forEach(cell => {
                let value = parseFloat(cell.getAttribute('data-price'));
                if (!isNaN(value)) {
                    cell.textContent = formatNumber(value) + ' đ';
                }
            });

            // Khởi tạo tooltips
            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
            const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
        });

        // Khởi tạo carousel và kiểm tra số lượng ảnh
        document.addEventListener('DOMContentLoaded', function () {
            const carouselItems = document.querySelectorAll('.carousel-item');
            if (carouselItems.length <= 1) {
                const carousel = document.querySelector('.carousel');
                carousel.setAttribute('data-bs-interval', 'false');
                document.querySelectorAll('.carousel-control-prev, .carousel-control-next').forEach(btn => btn.style.display = 'none');
            } else {
                const carousel = new bootstrap.Carousel(document.getElementById('productCarousel'), {
                    interval: false
                });
            }
        });

        // Hiển thị modal xác nhận xóa
        function showConfirmDialog() {
            var modal = new bootstrap.Modal(document.getElementById('confirmDeleteModal'));
            modal.show();
        }
    </script>
}