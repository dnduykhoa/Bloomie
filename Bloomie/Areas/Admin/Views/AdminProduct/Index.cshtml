@model IEnumerable<Bloomie.Models.Entities.Product>

@{
    ViewData["Title"] = "Quản lý sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";

    int currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
    int totalPages = ViewData["TotalPages"] != null ? (int)ViewData["TotalPages"] : 1;
    int totalItems = ViewData["TotalItems"] != null ? (int)ViewData["TotalItems"] : 0;
    string searchString = ViewData["SearchString"]?.ToString();
}

<div class="container-fluid mt-2 p-0">
    <div class="card shadow-sm border-0">
        <div class="card-body">
            <!-- Header and Add Product Button -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="fw-bold text-dark">
                    <i class="fas fa-box text-primary me-2"></i> Danh sách sản phẩm
                </h2>
                <a asp-action="Add" asp-route-currentPage="@currentPage" class="btn btn-primary shadow-sm">
                    <i class="fas fa-plus me-2"></i> Thêm sản phẩm
                </a>
            </div>

            <!-- Search Bar -->
            <div class="mb-4">
                <form asp-action="Index" method="get" class="d-flex align-items-center">
                    <div class="input-group" style="max-width: 400px;">
                        <input type="text" name="searchString" class="form-control" placeholder="Tìm kiếm sản phẩm..." value="@searchString" />
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    @if (!string.IsNullOrEmpty(searchString))
                    {
                        <a asp-action="Index" class="btn btn-secondary ms-2">
                            <i class="fas fa-times"></i>
                        </a>
                    }
                </form>
            </div>

            <!-- Product Table -->
            <div class="table-responsive">
                <table class="table table-hover table-bordered mb-0">
                    <thead class="bg-primary text-white">
                        <tr>
                            <th class="col-stt">STT</th>
                            <th class="col-name">Sản phẩm</th>
                            <th class="col-price">Giá</th>
                            <th class="col-category">Loại</th>
                            <th class="col-quantity">Số lượng</th>
                            <th class="col-image">Ảnh</th>
                            <th class="col-actions">Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            int index = (currentPage - 1) * (int)ViewData["PageSize"] + 1;
                            @foreach (var product in Model)
                            {
                                <tr>
                                    <td>@index</td>
                                    <td class="text-left product-name">@product.Name</td>
                                    <td class="price-cell" data-price="@product.Price">@product.Price đ</td>
                                    <td class="category-cell">@product.Category?.Name</td>
                                    <td>@product.Quantity</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(product.ImageUrl))
                                        {
                                            <img src="@product.ImageUrl" alt="Product Image" width="80" height="80" class="img-thumbnail" />
                                        }
                                        else
                                        {
                                            <span class="text-muted">No Image</span>
                                        }
                                    </td>
                                    <td class="actions-cell">
                                        <a asp-area="Admin" asp-action="Display" asp-route-id="@product.Id" asp-route-currentPage="@currentPage" class="btn btn-info btn-sm" data-bs-toggle="tooltip" data-bs-title="Xem">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-area="Admin" asp-action="Update" asp-route-id="@product.Id" asp-route-currentPage="@currentPage" class="btn btn-warning btn-sm" data-bs-toggle="tooltip" data-bs-title="Sửa">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-area="Admin" asp-action="Delete" asp-route-id="@product.Id" asp-route-currentPage="@currentPage" class="btn btn-danger btn-sm" data-bs-toggle="tooltip" data-bs-title="Xóa">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </td>
                                </tr>
                                index++;
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center text-muted py-4">Không có sản phẩm nào.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination Controls -->
            @if (totalPages > 1)
            {
                <div class="pagination-section mt-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="pagination-info">
                            Hiển thị @Model.Count() trong tổng số @totalItems sản phẩm
                        </div>
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-end mb-0">
                                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(currentPage - 1)" asp-route-searchString="@searchString" aria-label="Previous">
                                        <span aria-hidden="true">«</span>
                                    </a>
                                </li>
                                @for (int i = 1; i <= totalPages; i++)
                                {
                                    <li class="page-item @(i == currentPage ? "active" : "")">
                                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-searchString="@searchString">@i</a>
                                    </li>
                                }
                                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(currentPage + 1)" asp-route-searchString="@searchString" aria-label="Next">
                                        <span aria-hidden="true">»</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #2563eb;
        --secondary-color: #60a5fa;
        --text-dark: #1e293b;
        --text-light: #ffffff;
        --background-light: #f8fafc;
    }

    h2 {
        font-family: 'Inter', sans-serif;
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--text-dark);
    }

    .container-fluid {
        padding-left: 0 !important;
        padding-right: 0 !important;
        margin: 0 !important;
        width: 100% !important;
    }

    .card {
        width: 100% !important;
        max-width: none !important;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        background-color: #ffffff;
    }

    .card-body {
        padding: 20px;
    }

    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-primary:hover {
            background-color: #1d4ed8;
            border-color: #1d4ed8;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

    .btn-secondary {
        background-color: #6b7280;
        border-color: #6b7280;
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-secondary:hover {
            background-color: #4b5563;
            border-color: #4b5563;
            transform: translateY(-1px);
        }

    .form-control {
        border-radius: 6px;
        border: 1px solid #d1d5db;
        padding: 8px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
            outline: none;
        }

    .input-group {
        border-radius: 6px;
    }

    .table {
        background-color: #ffffff;
        border-radius: 8px;
        table-layout: fixed;
        width: 100%;
        font-size: 0.9rem;
    }

        .table th, .table td {
            border-color: #e5e7eb;
            text-align: center;
            vertical-align: middle;
            padding: 10px;
        }

        .table th {
            background-color: var(--primary-color);
            color: var(--text-light);
            font-weight: 500;
            text-transform: uppercase;
            font-size: 0.85rem;
        }

    .table-hover tbody tr:hover {
        background-color: #f1f5f9;
    }

    .table-bordered td.text-left {
        text-align: left !important;
    }

    .col-stt {
        width: 5%;
        min-width: 50px;
    }

    .col-name {
        width: 30%;
        min-width: 250px;
    }

    .col-price {
        width: 15%;
        min-width: 130px;
    }

    .col-category {
        width: 12%;
        min-width: 110px;
    }

    .col-quantity {
        width: 8%;
        min-width: 90px;
    }

    .col-image {
        width: 15%;
        min-width: 130px;
    }

    .col-actions {
        width: 15%;
        min-width: 160px;
    }

    .product-name {
        white-space: normal;
        overflow-wrap: break-word;
        max-width: 100%;
        line-height: 1.4;
    }

    .price-cell, .category-cell {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 100%;
    }

    .actions-cell {
        white-space: nowrap;
    }

    .btn-info, .btn-warning, .btn-danger {
        border-radius: 6px;
        padding: 4px 8px;
        font-size: 0.8rem;
        min-width: 32px;
        transition: all 0.2s ease;
        margin-right: 4px;
    }

    .btn-info {
        background-color: #06b6d4;
        border-color: #06b6d4;
    }

        .btn-info:hover {
            background-color: #0891b2;
            transform: translateY(-1px);
        }

    .btn-warning {
        background-color: #f59e0b;
        border-color: #f59e0b;
    }

        .btn-warning:hover {
            background-color: #d97706;
            transform: translateY(-1px);
        }

    .btn-danger {
        background-color: #ef4444;
        border-color: #ef4444;
        margin-right: 0;
    }

        .btn-danger:hover {
            background-color: #dc2626;
            transform: translateY(-1px);
        }

    .img-thumbnail {
        border: 1px solid #e5e7eb;
        border-radius: 6px;
        transition: all 0.2s ease;
        max-width: 80px;
        height: auto;
    }

        .img-thumbnail:hover {
            border-color: var(--primary-color);
            box-shadow: 0 0 6px rgba(37, 99, 235, 0.2);
            transform: scale(1.05);
        }

    .pagination-section {
        padding: 12px 0;
        background-color: #f8fafc;
        border-top: 1px solid #e5e7eb;
    }

    .pagination-info {
        font-size: 0.85rem;
        color: #6b7280;
    }

    .pagination .page-link {
        border-radius: 6px;
        margin: 0 4px;
        color: var(--primary-color);
        border: 1px solid #d1d5db;
        font-size: 0.85rem;
        padding: 6px 12px;
        transition: all 0.2s ease;
    }

    .pagination .page-item.active .page-link {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        color: var(--text-light);
    }

    .pagination .page-item.disabled .page-link {
        color: #d1d5db;
        background-color: #f8fafc;
        border-color: #d1d5db;
    }

    .pagination .page-link:hover {
        background-color: #e5e7eb;
        border-color: #d1d5db;
    }
</style>

<script>
    function formatNumber(number) {
        return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }

    document.addEventListener('DOMContentLoaded', function () {
        const priceCells = document.querySelectorAll('.price-cell');
        priceCells.forEach(cell => {
            let value = parseFloat(cell.getAttribute('data-price'));
            if (!isNaN(value)) {
                cell.textContent = formatNumber(value) + ' đ';
            }
        });

        // Initialize Bootstrap tooltips
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
    });
</script>