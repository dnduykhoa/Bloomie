@model Bloomie.Models.ViewModels.CreateProductViewModel

@{
    ViewData["Title"] = "Cập nhật sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    int currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
}

<div class="container-fluid mt-2 p-0">
    <div class="card shadow-sm border-0">
        <div class="card-body">
            <h2 class="mb-4 fw-bold">
                <i class="fas fa-edit me-2"></i> Cập nhật sản phẩm
            </h2>
            <form asp-action="Update" method="post" enctype="multipart/form-data">
                <input type="hidden" name="currentPage" value="@currentPage" />
                <input type="hidden" asp-for="Id" />
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <!-- Tên sản phẩm -->
                <div class="form-group mb-4">
                    <label asp-for="Name" class="control-label">Tên sản phẩm</label>
                    <input asp-for="Name" class="form-control" required />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <!-- Giá sản phẩm -->
                <div class="form-group mb-4">
                    <label asp-for="Price" class="control-label">Giá (VND)</label>
                    <div class="input-group">
                        <input type="text" class="form-control price-input" required />
                        <span class="input-group-text">đ</span>
                    </div>
                    <input type="hidden" asp-for="Price" class="price-hidden" name="Price" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>

                <!-- Số lượng -->
                <div class="form-group mb-4">
                    <label asp-for="Quantity" class="control-label">Số lượng</label>
                    <input asp-for="Quantity" class="form-control" required />
                    <span asp-validation-for="Quantity" class="text-danger"></span>
                </div>

                <!-- Đơn vị -->
                <div class="form-group mb-4">
                    <label asp-for="Unit" class="control-label">Đơn vị</label>
                    <input asp-for="Unit" class="form-control" required />
                    <span asp-validation-for="Unit" class="text-danger"></span>
                </div>

                <!-- Mô tả sản phẩm -->
                <div class="form-group mb-4">
                    <label asp-for="Description" class="control-label">Mô tả</label>
                    <textarea asp-for="Description" class="form-control" rows="4" required></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <!-- Danh mục sản phẩm -->
                <div class="form-group mb-4">
                    <label asp-for="CategoryId" class="control-label">Danh mục sản phẩm</label>
                    <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.Categories" required>
                        <option value="">-- Chọn danh mục sản phẩm --</option>
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>

                <!-- Loại hoa -->
                <div class="form-group mb-4">
                    <label class="control-label">Loại hoa</label>
                    <div id="flower-types-container">
                        @if (Model.FlowerTypes.Any())
                        {
                            for (int i = 0; i < Model.FlowerTypes.Count; i++)
                            {
                                <div class="flower-type-item mb-3 d-flex align-items-center">
                                    <div class="flex-grow-1 me-2">
                                        <select name="FlowerTypes[@i].FlowerTypeId" class="form-control" required>
                                            <option value="">-- Chọn loại hoa --</option>
                                            @foreach (var flowerType in (SelectList)ViewBag.FlowerTypes)
                                            {
                                                <option value="@flowerType.Value" selected="@(Model.FlowerTypes[i].FlowerTypeId.ToString() == flowerType.Value ? "selected" : null)">@flowerType.Text</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="me-2">
                                        <input type="number" name="FlowerTypes[@i].Quantity" value="@Model.FlowerTypes[i].Quantity" class="form-control" placeholder="Số bông mỗi bó" required min="1" />
                                    </div>
                                    <button type="button" class="btn btn-danger btn-sm remove-flower-type">X</button>
                                </div>
                            }
                        }
                    </div>
                    <button type="button" class="btn btn-outline-primary mt-2" id="add-flower-type">Thêm loại hoa</button>
                    <small class="text-muted d-block mt-1">Chọn ít nhất một loại hoa và số bông mỗi bó (tổng số bông sẽ là số bông mỗi bó x số lượng sản phẩm).</small>
                    <span class="text-danger" id="flower-types-error"></span>
                </div>

                <!-- Trạng thái -->
                <div class="form-group mb-4">
                    <div class="form-check">
                        <input asp-for="IsActive" class="form-check-input" type="checkbox" checked="@Model.IsActive" />
                        <label asp-for="IsActive" class="form-check-label">Kích hoạt</label>
                    </div>
                    <div class="form-check">
                        <input asp-for="IsNew" class="form-check-input" type="checkbox" checked="@Model.IsNew" />
                        <label asp-for="IsNew" class="form-check-label">Sản phẩm mới</label>
                    </div>
                </div>

                <!-- Upload Ảnh Chính -->
                <div class="form-group mb-4">
                    <label class="control-label">Ảnh chính</label>
                    <div id="mainImagePreview">
                        @if (!string.IsNullOrEmpty(Model.ImageUrl))
                        {
                            <img src="@Model.ImageUrl" alt="Product Image" class="img-thumbnail" style="max-width: 200px; margin-top: 10px; margin-bottom: 10px;" />
                        }
                    </div>
                    <input type="file" name="imageUrl" class="form-control file-input" id="mainImageInput" accept="image/*" />
                    <small class="text-muted d-block mt-1">Chọn hình ảnh chính mới cho sản phẩm (khuyến nghị: 500x500px). Để trống để giữ hình ảnh hiện tại.</small>
                </div>

                <!-- Upload Ảnh Bổ Sung -->
                <div class="form-group mb-4">
                    <label class="control-label">Ảnh phụ</label>
                    <div id="additionalImagesPreview" class="mt-3 d-flex flex-wrap gap-3">
                        @if (Model.AdditionalImageUrls != null && Model.AdditionalImageUrls.Any())
                        {
                            foreach (var img in Model.AdditionalImageUrls)
                            {
                                <div class="image-container" style="position: relative; margin: 10px;">
                                    <img src="@img" alt="Additional Image" class="img-thumbnail" style="max-width: 150px; max-height: 150px;" />
                                    <button type="button" class="btn btn-danger btn-sm" style="position: absolute; top: 0; right: 0;" onclick="removeExistingImage(this)">X</button>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted">Không có hình ảnh bổ sung.</p>
                        }
                    </div>
                    <input type="file" name="additionalImages" multiple class="form-control file-input" id="additionalImagesInput" accept="image/*" />
                    <small class="text-muted d-block mt-1">Bạn có thể chọn nhiều hình ảnh. Giữ phím Ctrl (Windows) hoặc Command (Mac) để chọn nhiều hình ảnh.</small>
                </div>

                <!-- Submit -->
                <div class="form-group mt-4">
                    <button type="submit" class="btn btn-primary me-2">Lưu sản phẩm</button>
                    <a asp-controller="AdminProduct" asp-action="Index" asp-route-pageNumber="@currentPage" class="btn btn-outline-secondary">Hủy</a>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #2563eb;
        --secondary-color: #60a5fa;
        --text-dark: #1e293b;
        --text-light: #ffffff;
        --background-light: #f8fafc;
        --text-muted: #6b7280;
    }

    h2 {
        font-family: 'Inter', sans-serif;
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--text-dark);
    }

    .container-fluid {
        padding-left: 0 !important;
        padding-right: 0 !important;
        margin: 0 !important;
        width: 100% !important;
    }

    .card {
        width: 100% !important;
        max-width: none !important;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        background-color: #ffffff;
    }

    .card-body {
        padding: 20px;
    }

    .form-group {
        margin-bottom: 25px;
    }

    .control-label {
        font-family: 'Inter', sans-serif;
        font-weight: 500;
        font-size: 1rem;
        color: var(--text-dark);
        margin-bottom: 8px;
        display: block;
    }

    .form-control {
        border-radius: 6px;
        border: 1px solid #d1d5db;
        padding: 8px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
            outline: none;
        }

    textarea.form-control {
        resize: vertical;
        min-height: 120px;
    }

    select.form-control {
        appearance: none;
        background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24"><path fill="%231e293b" d="M7 10l5 5 5-5z"/></svg>') no-repeat right 15px center;
        background-size: 12px;
        padding-right: 35px;
    }

    .input-group {
        border-radius: 6px;
    }

    .input-group-text {
        background-color: var(--primary-color);
        color: var(--text-light);
        border: 1px solid var(--primary-color);
        border-radius: 0 6px 6px 0;
    }

    .price-input {
        border-right: none;
        border-radius: 6px 0 0 6px;
    }

    .file-input {
        border-radius: 6px;
        padding: 8px;
        background-color: #ffffff;
        border: 1px solid #d1d5db;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
    }

        .file-input::-webkit-file-upload-button {
            background-color: var(--primary-color);
            color: var(--text-light);
            border: none;
            border-radius: 6px;
            padding: 6px 12px;
            font-family: 'Inter', sans-serif;
            font-weight: 500;
            font-size: 0.9rem;
            cursor: pointer;
            transition: all 0.2s ease;
            margin-right: 10px;
        }

            .file-input::-webkit-file-upload-button:hover {
                background-color: #1d4ed8;
                transform: translateY(-1px);
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            }

        .file-input:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
            outline: none;
        }

    .text-danger {
        font-size: 0.9rem;
        margin-top: 5px;
    }

    .text-muted {
        font-size: 0.85rem;
        color: var(--text-muted);
        margin-top: 5px;
    }

    #mainImagePreview img,
    #additionalImagesPreview img {
        border: 1px solid #e5e7eb;
        border-radius: 6px;
        transition: all 0.2s ease;
        max-width: 200px;
    }

        #mainImagePreview img:hover,
        #additionalImagesPreview img:hover {
            border-color: var(--primary-color);
            box-shadow: 0 0 6px rgba(37, 99, 235, 0.2);
            transform: scale(1.05);
        }

    #additionalImagesPreview .btn-danger {
        border-radius: 50%;
        padding: 2px 8px;
        font-size: 0.8rem;
        line-height: 1;
        transition: all 0.2s ease;
    }

        #additionalImagesPreview .btn-danger:hover {
            background-color: #dc2626;
            transform: scale(1.1);
        }

    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-primary:hover {
            background-color: #1d4ed8;
            border-color: #1d4ed8;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

    .btn-outline-secondary {
        border-color: #6b7280;
        color: #6b7280;
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-outline-secondary:hover {
            background-color: #4b5563;
            border-color: #4b5563;
            color: #ffffff;
            transform: translateY(-1px);
        }

    .btn-outline-primary {
        border-color: var(--primary-color);
        color: var(--primary-color);
        border-radius: 6px;
        padding: 6px 12px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

        .btn-outline-primary:hover {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            color: #ffffff;
            transform: translateY(-1px);
        }

    .flower-type-item {
        background-color: #f8fafc;
        padding: 10px;
        border-radius: 6px;
        border: 1px solid #e5e7eb;
    }

    .gap-3 {
        gap: 15px;
    }
</style>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        // Định dạng giá trị Price khi nhập
        const priceInput = document.querySelector('.price-input');
        const priceHidden = document.querySelector('.price-hidden');
        priceInput.addEventListener('input', function (e) {
            let value = e.target.value.replace(/[^0-9]/g, ''); // Chỉ cho phép nhập số
            if (value) {
                priceHidden.value = value; // Lưu giá trị số thô vào input ẩn
                value = parseInt(value).toLocaleString('vi-VN'); // Định dạng số với dấu phẩy để hiển thị
                e.target.value = value;
            } else {
                e.target.value = ''; // Nếu không có giá trị hợp lệ, để trống
                priceHidden.value = '';
            }
        });

        // Hiển thị giá trị Price ban đầu
        document.addEventListener('DOMContentLoaded', function () {
            if (priceHidden.value) {
                priceInput.value = parseInt(priceHidden.value).toLocaleString('vi-VN');
            }
        });

        // Xem trước ảnh chính
        document.getElementById('mainImageInput').addEventListener('change', function (e) {
            const file = e.target.files[0];
            const previewContainer = document.getElementById('mainImagePreview');
            previewContainer.innerHTML = '';

            if (file) {
                const reader = new FileReader();
                reader.onload = function (event) {
                    const img = document.createElement('img');
                    img.src = event.target.result;
                    img.style.maxWidth = '200px';
                    img.style.marginTop = '10px';
                    previewContainer.appendChild(img);
                };
                reader.readAsDataURL(file);
            }
        });

        // Xem trước ảnh bổ sung
        const additionalImagesInput = document.getElementById('additionalImagesInput');
        const additionalImagesPreview = document.getElementById('additionalImagesPreview');
        additionalImagesInput.addEventListener('change', function (e) {
            const files = e.target.files;
            additionalImagesPreview.innerHTML = '';

            if (files.length > 0) {
                Array.from(files).forEach((file, index) => {
                    const reader = new FileReader();

                    reader.onload = function (event) {
                        const imgContainer = document.createElement('div');
                        imgContainer.style.margin = '10px';
                        imgContainer.style.position = 'relative';
                        imgContainer.dataset.index = index;

                        const img = document.createElement('img');
                        img.src = event.target.result;
                        img.style.maxWidth = '150px';
                        img.style.maxHeight = '150px';

                        const removeButton = document.createElement('button');
                        removeButton.textContent = 'X';
                        removeButton.className = 'btn btn-danger btn-sm';
                        removeButton.style.position = 'absolute';
                        removeButton.style.top = '0';
                        removeButton.style.right = '0';
                        removeButton.addEventListener('click', function () {
                            imgContainer.remove();
                            updateFileInput(files, index);
                        });

                        imgContainer.appendChild(img);
                        imgContainer.appendChild(removeButton);
                        additionalImagesPreview.appendChild(imgContainer);
                    };

                    reader.readAsDataURL(file);
                });
            } else {
                additionalImagesPreview.innerHTML = '<p>Không có hình ảnh nào được chọn.</p>';
            }
        });

        // Cập nhật danh sách file sau khi xóa ảnh
        function updateFileInput(originalFiles, removedIndex) {
            const newFiles = Array.from(originalFiles).filter((_, index) => index !== removedIndex);
            const dataTransfer = new DataTransfer();
            newFiles.forEach(file => dataTransfer.items.add(file));
            additionalImagesInput.files = dataTransfer.files;
            const event = new Event('change', { bubbles: true });
            additionalImagesInput.dispatchEvent(event);
        }

        // Xóa ảnh bổ sung hiện có
        function removeExistingImage(button) {
            const container = button.parentElement;
            container.remove();
        }

        // Quản lý danh sách loại hoa
        let flowerTypeIndex = @Model.FlowerTypes.Count;
        const flowerTypesContainer = document.getElementById('flower-types-container');
        const addFlowerTypeButton = document.getElementById('add-flower-type');

        addFlowerTypeButton.addEventListener('click', function () {
            const flowerTypeItem = document.createElement('div');
            flowerTypeItem.className = 'flower-type-item mb-3 d-flex align-items-center';
            flowerTypeItem.innerHTML = `
                <div class="flex-grow-1 me-2">
                    <select name="FlowerTypes[${flowerTypeIndex}].FlowerTypeId" class="form-control" required>
                        <option value="">-- Chọn loại hoa --</option>
        @foreach (var flowerType in (SelectList)ViewBag.FlowerTypes)
        {
                                    <option value="@flowerType.Value">@flowerType.Text</option>
        }
                    </select>
                </div>
                <div class="me-2">
                    <input type="number" name="FlowerTypes[${flowerTypeIndex}].Quantity" class="form-control" placeholder="Số lượng" required min="1" />
                </div>
                <button type="button" class="btn btn-danger btn-sm remove-flower-type">X</button>
            `;
            flowerTypesContainer.appendChild(flowerTypeItem);
            flowerTypeIndex++;
        });

        flowerTypesContainer.addEventListener('click', function (e) {
            if (e.target.classList.contains('remove-flower-type')) {
                e.target.parentElement.remove();
                updateFlowerTypeIndices();
            }
        });

        function updateFlowerTypeIndices() {
            const items = flowerTypesContainer.querySelectorAll('.flower-type-item');
            items.forEach((item, index) => {
                const select = item.querySelector('select');
                const input = item.querySelector('input[type="number"]');
                select.name = `FlowerTypes[${index}].FlowerTypeId`;
                input.name = `FlowerTypes[${index}].Quantity`;
            });
            flowerTypeIndex = items.length;
        }

        // Validate ít nhất một loại hoa
        document.querySelector('form').addEventListener('submit', function (e) {
            const flowerTypeItems = flowerTypesContainer.querySelectorAll('.flower-type-item');
            const errorContainer = document.getElementById('flower-types-error');
            if (flowerTypeItems.length === 0) {
                e.preventDefault();
                errorContainer.textContent = 'Vui lòng chọn ít nhất một loại hoa.';
            } else {
                errorContainer.textContent = '';
            }
        });
    </script>
}